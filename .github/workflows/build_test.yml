name: Build Test

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  # zephyrprojectrtos_image:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - run: mkdir -p ~/image_cache

  #     - id: image-cache
  #       uses: actions/cache@v3
  #       with:
  #           path: ~/image_cache
  #           key: image-cache-${{ runner.os }}

  #     - if: steps.image-cache.outputs.cache-hit != 'true'
  #       run: |
  #           docker pull zephyrprojectrtos/ci:v0.26.4
  #           docker save zephyrprojectrtos/ci:v0.26.4 | gzip > ~/image_cache/zephyrprojectrtos-ci-v0.26.4.tar.gz

  #     - if: steps.image-cache.outputs.cache-hit == 'true'
  #       run: docker load --input ~/image_cache/zephyrprojectrtos-ci-v0.26.4.tar.gz

  build_app_test:
    # needs: zephyrprojectrtos_image

    runs-on: ubuntu-latest

    env:
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.16.1

    steps:
      - uses: actions/checkout@v3

      - run: mkdir -p ~/image_cache

      - id: image-cache
        uses: actions/cache@v3
        with:
            path: ~/image_cache
            key: image-cache-${{ runner.os }}

      - if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
            docker pull zephyrprojectrtos/ci:v0.26.4
            docker save zephyrprojectrtos/ci:v0.26.4 | gzip > ~/image_cache/zephyrprojectrtos-ci-v0.26.4.tar.gz

      # - if: steps.image-cache.outputs.cache-hit == 'true'
      - name: docker load
        run: docker load --input ~/image_cache/zephyrprojectrtos-ci-v0.26.4.tar.gz

      - name: West update
        run: west update

      - name: Build app circuitdojo_feather_nrf9160_ns
        run: west build -b circuitdojo_feather_nrf9160_ns ./app -p

      - name: Create build tarball
        run: |
          cd build
          tar czf merged.tar.gz build/zephyr/merged.hex

      - name: Upload tarball
        uses: actions/upload-artifact@v3
        with:
          name: build.tar.gz
          path: build/merged.tar.gz
